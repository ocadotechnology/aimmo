name: Publish Python Package
on:
  workflow_run:
    workflows: ["CI"]
    branches: [master, development]
    types:
      - completed
jobs:
  publish:
    name: Publish aimmo PyPi package
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-18.04
    env:
      NODE_ENV: production
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7.x
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Install frontend dependencies
        run: |
          cd game_frontend
          yarn --frozen-lockfile
      - name: Install wheel
        run: pip install wheel
      - name: Build worker wheel
        run: ./aimmo_runner/build_worker_wheel.sh
      - name: Bundle Frontend
        run: |
          cd game_frontend
          node djangoBundler.js
      - name: Set branch
        id: branch
        run: |
          echo "::set-output name=branch::${GITHUB_REF##*/}"  # get the substring from GITHUB_REF after the last '/'
      - name: Release aimmo
        uses: ocadotechnology/python-semantic-release@updated-beta-releases
        with:
          github_token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
          pypi_token: ${{ secrets.PYPI_TOKEN }}
          branch: ${{ steps.branch.outputs.branch }}
          build: ${{ github.run_number }}

  publish-docker-images:
    name: Publish aimmo Docker images
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set docker tag
        id: docker_tag
        run: |
          echo "::set-output name=tag::${GITHUB_REF:11}"  # this is either branch name or tag after first character ('v')
      - name: Build and push aimmo-game image
        id: game
        uses: docker/build-push-action@v2
        with:
          context: aimmo-game
          file: aimmo-game/Dockerfile
          tags: ocadotechnology/aimmo-game:${{ steps.docker_tag.outputs.tag }}
          target: runner
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Build and push aimmo-game-creator image
        id: game_creator
        uses: docker/build-push-action@v2
        with:
          context: aimmo-game-creator
          file: aimmo-game-creator/Dockerfile
          tags: ocadotechnology/aimmo-game-creator:${{ steps.docker_tag.outputs.tag }}
          target: runner
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image digest
        run: |
          echo ${{ steps.game.outputs.digest }}
          echo ${{ steps.game_creator.outputs.digest }}

  notify-semaphore:
    name: Notify Semaphore
    needs: [publish, publish-docker-images]
    runs-on: ubuntu-18.04
    steps:
      - name: Notify Semaphore (Staging)
        run: curl -d POST -v https://semaphoreci.com/api/v1/projects/${SEMAPHORE_PROJECT_ID}/master/build?auth_token=${SEMAPHORE_API_AUTH}
        env:
          SEMAPHORE_PROJECT_ID: ${{ secrets.SEMAPHORE_PROJECT_ID }}
          SEMAPHORE_API_AUTH: ${{ secrets.SEMAPHORE_API_AUTH }}

  merge-master-into-development:
    name: Merge master into development after release
    needs: [publish, publish-docker-images]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout development branch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: development
          persist-credentials: false
      - name: Setup git username
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "action@github.com"
      - name: Merge master into development
        run: |
          git merge origin/master
          git remote add authed-origin https://${GH_TOKEN}@github.com/ocadotechnology/aimmo.git > /dev/null 2>&1
          git push --quiet --set-upstream authed-origin development
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
