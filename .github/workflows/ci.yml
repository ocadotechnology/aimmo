name: CI
on:
  push:
    branches:
    - master
  pull_request:
jobs:
  test:
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.7.x
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Install dependencies
      run: |
        pip install pipenv
        pipenv install --dev --system
        pip install -U git+https://github.com/ocadotechnology/rapid-router@django_2_upgrade
        pip install -U git+https://github.com/ocadotechnology/codeforlife-portal@django_2_upgrade
        pip install -U "git+https://github.com/ocadotechnology/codeforlife-portal@django_2_upgrade#egg=cfl-common&subdirectory=cfl_common"
        cd game_frontend
        yarn --frozen-lockfile
    - name: Run Javascript tests
      run: |
        cd game_frontend
        yarn lint
        yarn test --coverage
    - name: Bundle Frontend
      env:
        NODE_ENV: production
      run: |
        cd game_frontend
        node djangoBundler.js
    - name: Run Python tests
      run: python all_tests.py -c --no-docker-container-tests
    - name: Run Cypress tests
      uses: cypress-io/github-action@v2
      with:
        install: false
        start: python ../run.py -c
        working-directory: game_frontend
        wait-on: http://localhost:8000
        wait-on-timeout: 400
        record: true
      env:
        CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
  test-aimmo-game:
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Build docker image
      run: |
        cd aimmo-game
        docker build -t ocadotechnology/aimmo-game:test --target tester .
    - name: Run tests
      run: docker run -i -p 5000:5000 ocadotechnology/aimmo-game:test /bin/bash -c "coverage run setup.py test && coverage xml"
    - name: Get the coverage data from the container
      run: |
        read CONTAINERID <<< $(docker ps --all -q | head -1)
        docker cp -a $CONTAINERID:.coverage $(pwd)/.coverage
        docker cp -a $CONTAINERID:coverage.xml $(pwd)/coverage.xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
  test-aimmo-game-creator:
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Build docker image
      run: |
        cd aimmo-game-creator
        docker build -t ocadotechnology/aimmo-game-creator:test --target tester .
    - name: Run tests
      run: docker run -i -p 5000:5000 ocadotechnology/aimmo-game-creator:test /bin/bash -c "coverage run setup.py test && coverage xml"
    - name: Get the coverage data from the container
      run: |
        read CONTAINERID <<< $(docker ps --all -q | head -1)
        docker cp -a $CONTAINERID:.coverage $(pwd)/.coverage
        docker cp -a $CONTAINERID:coverage.xml $(pwd)/coverage.xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
  test-aimmo-game-worker:
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Build docker image
      run: |
        cd aimmo-game-worker
        docker build -t ocadotechnology/aimmo-game-worker:test --target tester .
    - name: Run tests
      run: docker run -i -p 5000:5000 ocadotechnology/aimmo-game-worker:test /bin/bash -c "coverage run setup.py test && coverage xml"
    - name: Get the coverage data from the container
      run: |
        read CONTAINERID <<< $(docker ps --all -q | head -1)
        docker cp -a $CONTAINERID:.coverage $(pwd)/.coverage
        docker cp -a $CONTAINERID:coverage.xml $(pwd)/coverage.xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1

