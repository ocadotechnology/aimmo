name: Publish Docker images
on:
  push:
    tags:
      - "v*"
jobs:
  publish-docker-images:
    name: Publish aimmo Docker images
#    if: github.event.head_commit.author.email == 'action@github.com'
    runs-on: ubuntu-20.04
    steps:
      - name: Print git commit data
        run: |
          echo "Get commit info"
          echo " - ${{ env.GIT_COMMIT_SHA }}"
          echo " - ${{ env.GIT_COMMIT_SHORT_SHA }}"
          echo "Get author info"
          echo " - ${{ env.GIT_COMMIT_AUTHOR }}"
          echo " - ${{ env.GIT_COMMIT_AUTHOR_NAME }}"
          echo " - ${{ env.GIT_COMMIT_AUTHOR_EMAIL }}"
          echo "Get committer info"
          echo " - ${{ env.GIT_COMMIT_COMMITTER }}"
          echo " - ${{ env.GIT_COMMIT_COMMITTER_NAME }}"
          echo " - ${{ env.GIT_COMMIT_COMMITTER_EMAIL }}"
          echo "Get message info"
          echo " - ${{ env.GIT_COMMIT_MESSAGE_SUBJECT }}"
          echo " - ${{ env.GIT_COMMIT_MESSAGE_SUBJECT_SANITIZED }}"
          echo " - ${{ env.GIT_COMMIT_MESSAGE_BODY }}"
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v2
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#      - name: Cache Docker layers
#        uses: actions/cache@v3
#        with:
#          path: /tmp/.buildx-cache
#          key: ${{ runner.os }}-buildx-${{ github.sha }}
#          restore-keys: |
#            ${{ runner.os }}-buildx-
#      - name: Login to DockerHub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#      - name: Set docker tag
#        id: docker_tag
#        run: |
#          echo "::set-output name=tag::${GITHUB_REF:11}"  # this is either branch name or tag after first character ('v')
#      - name: Build and push aimmo-game image
#        id: game
#        uses: docker/build-push-action@v3
#        with:
#          context: aimmo-game
#          file: aimmo-game/Dockerfile
#          tags: ocadotechnology/aimmo-game:${{ steps.docker_tag.outputs.tag }}
#          target: runner
#          push: true
#          cache-from: type=local,src=/tmp/.buildx-cache
#          cache-to: type=local,dest=/tmp/.buildx-cache
#      - name: Build and push aimmo-game-creator image
#        id: game_creator
#        uses: docker/build-push-action@v3
#        with:
#          context: aimmo-game-creator
#          file: aimmo-game-creator/Dockerfile
#          tags: ocadotechnology/aimmo-game-creator:${{ steps.docker_tag.outputs.tag }}
#          target: runner
#          push: true
#          cache-from: type=local,src=/tmp/.buildx-cache
#          cache-to: type=local,dest=/tmp/.buildx-cache
#      - name: Image digest
#        run: |
#          echo ${{ steps.game.outputs.digest }}
#          echo ${{ steps.game_creator.outputs.digest }}
#
#  trigger-staging-deployment:
#    name: Trigger staging deployment
#    needs: [publish-docker-images]
#    runs-on: ubuntu-20.04
#    steps:
#      - name: Trigger staging deployment
#        uses: actions/github-script@v6
#        with:
#          github-token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
#          script: |
#            github.rest.actions.createWorkflowDispatch({
#              owner: 'ocadotechnology',
#              repo: 'codeforlife-deploy-appengine',
#              workflow_id: 'deploy_staging.yml',
#              ref: 'master',
#            });
